SET vLastRefresh = Date(ReloadTime(), 'DD-MMM-YYYY');
 
  //loading in the Definitions for the Definitions sheet

DEFINITIONS_DATA:
LOAD 	Sheet,
		Metric_Chart,
        Definition
FROM [lib://Qlik Folder (xxx_4xxxxxxx)/SSDD/Definitions.csv]
(txt, codepage is 28591, embedded labels, delimiter is ',', msq);


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//Customers who have an open credit card - includes statement delivery preference

CREDIT_CARD:
LOAD 	DISTINCT CLIENTID AS PRODUCT_CID, 
        STMT_FLAG AS STATEMENT_DELIVERY,
        IF(CC_DATE_OPENED>= ADDMONTHS(DATE(TODAY()), -12), 'NTB', 'ETB') AS NTB_ETB,
        '30 Days' AS PERIOD,
        CLIENTID & ' 30 Days' AS PRODUCT_KEY,
        'Credit Card' as PRODUCT;

SELECT "CLIENTID",
    CASE WHEN CC_STMT_FLAG IS NULL THEN 'Paper'
    ELSE 'Paperless' END AS STMT_FLAG,
    CC_DATE_OPENED
FROM "MINERVADMMART"."DM_CREDIT_CARD" 
WHERE (CC_STATUS NOT IN  ('8', '9', 'Z')
AND CC_DATE_CLOSED IS NULL);


CONCATENATE(CREDIT_CARD)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '90 Days' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT CREDIT_CARD;


CONCATENATE(CREDIT_CARD)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '12 Months' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT CREDIT_CARD;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//Customers who have an open ESA - includes statement delivery preference

NOCONCATENATE
EVERYDAY_SAVER:
LOAD 	DISTINCT CLIENTID_1 AS PRODUCT_CID, 
        STMT_FLAG AS STATEMENT_DELIVERY,
        IF(ES_DATE_OPENED>= ADDMONTHS(DATE(TODAY()), -12), 'NTB', 'ETB') AS NTB_ETB,
        '30 Days' AS PERIOD,
        CLIENTID_1 & ' 30 Days' AS PRODUCT_KEY,
        'ESA' as PRODUCT;

SELECT CLIENTID_1,
    CASE WHEN DELIVERY_PREFERENCE_CODE in ('1', '2') THEN 'Paper'
    ELSE 'Paperless' END AS STMT_FLAG,
    ES_DATE_OPENED
FROM "MINERVADMMART"."DM_EVERYDAY_SAVER"
INNER JOIN "MINERVADMMART"."DM_CUSTOMER"
ON CLIENTID_1 = CLIENTID
WHERE 	(ES_STATUS != '8'
		AND ES_DATE_CLOSED IS NULL);
        
        
CONCATENATE(EVERYDAY_SAVER)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '90 Days' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT EVERYDAY_SAVER;


CONCATENATE(EVERYDAY_SAVER)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '12 Months' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT EVERYDAY_SAVER;
        
        
CONCATENATE(CREDIT_CARD)
LOAD *
RESIDENT EVERYDAY_SAVER;

DROP TABLE EVERYDAY_SAVER;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//Customers who have an open loan - includes statement delivery preference

NOCONCATENATE
PERSONAL_LOAN:
LOAD DISTINCT CLIENTID AS PRODUCT_CID,
    'Paper' AS STATEMENT_DELIVERY,
     IF(LN_DATE_OPENED >= ADDMONTHS(DATE(TODAY()), -12), 'NTB', 'ETB') AS NTB_ETB,
     '30 Days' AS PERIOD,
     CLIENTID & ' 30 Days' AS PRODUCT_KEY,
    'Personal Loan' as PRODUCT;

SELECT	CLIENTID,
		LN_DATE_OPENED
FROM MINERVADMMART.DM_LOAN 
WHERE 	(LN_ACCOUNT_STATUS NOT IN ('5','8','9')
		AND LN_DATE_CLOSED IS NULL);
        

// Get the personal loans data from terradata

// 25/02/2025 Since the cloud migration activities on the weekend, our connection to Teradata is not working. 
// This is being looked at by the relevant teams but, in the meantime, the following terradata code will not run and so has 
// been commented out

LIB CONNECT TO 'Teradata_UKDWHPRD.systems.uk.hsbc (hbap_43446682)';

TERRADATA_LOANS:
SQL
SELECT
	DISTINCT
    Z.ARRG_ID,
    Z.RPS_ACCT_ID_14,
    A.REC_ACDT AS LN_DATE_OPENED,
    C.IP_ID,
    D.CDU_CIN

FROM
    GB_DWHL_SAS_R42.DWH_ARRG_XREF AS Z, /*Gets ARRG_ID from RPS ID */
    GB_DWHL_SAS_R42.DWH_LN_ARRG AS A, /*Confirms account was a Loan */
    GB_DWHL_SAS_R42.DWH_DLY_ACCT_BAL B, /*Confirms active AND provides latest bal */
    GB_DWHL_SAS_R42.DWH_IP_ARRG_RELN C, /*Finds IP_ID of Account*/
    GB_DWHL_SAS_R42.DWH_IP_XREF D /*Finds CDU CIN of Account*/

WHERE	
	Z.ARRG_ID = A.ARRG_ID
	AND Z.ARRG_ID = B.ARRG_ID
	AND Z.ARRG_ID = C.ARRG_ID
    AND C.IP_ID = D.IP_ID
    AND Z.RPS_ACCT_ID_14 >= 40125800000001	
    AND	Z.RPS_ACCT_ID_14 <= 40125899999999
    AND A.REC_EDT = '9999-12-31'
    AND B.BAL_DT = (CURRENT_DATE - INTERVAL '1' DAY)
    AND C.REC_EDT = '9999-12-31';


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//This adds the CLIENTID to the TERRADATA_LOANS table
INNER JOIN(TERRADATA_LOANS)
SQL
SELECT
	DISTINCT CDU_NUMBER AS CDU_CIN,
    CLIENTID
FROM MINERVADMMART.DM_CDU_NUMBER_LOOKUP;


CONCATENATE(PERSONAL_LOAN)
LOAD
	DISTINCT CLIENTID AS PRODUCT_CID,
    'Paper' AS STATEMENT_DELIVERY,
     IF(LN_DATE_OPENED >= ADDMONTHS(DATE(TODAY()), -12), 'NTB', 'ETB') AS NTB_ETB,
     '30 Days' AS PERIOD,
     CLIENTID & ' 30 Days' AS PRODUCT_KEY,
    'Personal Loan' as PRODUCT
RESIDENT TERRADATA_LOANS;

DROP TABLE TERRADATA_LOANS;

        
CONCATENATE(PERSONAL_LOAN)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '90 Days' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT PERSONAL_LOAN;


CONCATENATE(PERSONAL_LOAN)
LOAD 	PRODUCT_CID, 
        STATEMENT_DELIVERY,
        NTB_ETB,
        '12 Months' AS PERIOD,
        PRODUCT_KEY,
        PRODUCT
RESIDENT PERSONAL_LOAN;
        
        
CONCATENATE(CREDIT_CARD)
LOAD *
RESIDENT PERSONAL_LOAN;

DROP TABLE PERSONAL_LOAN;

RENAME TABLE CREDIT_CARD TO ALL_PRODUCTS_INT;								


ALL_PRODUCTS:
  
LOAD 	DISTINCT
		PRODUCT_CID,
        PRODUCT_CID AS IVR_CID,
        PRODUCT_CID AS DIGITAL_LADDER_CID,
        STATEMENT_DELIVERY,
        NTB_ETB,
        PRODUCT_CID & ' ' & PERIOD AS PRODUCT_KEY,
        PRODUCT_CID & ' ' & PERIOD AS PIB_LOGIN_KEY,
        PRODUCT_CID & ' ' & PERIOD AS MIB_LOGIN_KEY,
        PRODUCT_CID & ' ' & PERIOD AS FIRST_MIB_LOGIN_KEY,
        PRODUCT_CID & ' ' & PERIOD AS MIB_ACTION_KEY,
        PRODUCT_CID & ' ' & PERIOD AS CONTACT_DETAILS_KEY,
        PRODUCT_CID & ' ' & PERIOD AS CUSTOMER_DETAILS_KEY,
        PRODUCT_CID & ' ' & PERIOD AS MARKETING_KEY,
        PRODUCT_CID & ' ' & PERIOD AS MIB_DEVICE_KEY,
        PRODUCT_CID & ' ' & PERIOD AS CC_PRODUCT_ACTIVE_KEY,
        PRODUCT_CID & ' ' & PERIOD AS CC_OFFER_KEY,
        PRODUCT,
        PERIOD
RESIDENT ALL_PRODUCTS_INT;


DROP TABLE ALL_PRODUCTS_INT;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';				

//Customers logging into PIB in the last 12 months

PIB_LOGINS:
LOAD	
		CLIENTID AS PIB_LOGIN_CID,
        NO_PIB_LOGINS,
     	'PIB Active' AS PIB_LOGIN_PERIOD,
        CLIENTID & ' 30 Days' AS PIB_LOGIN_KEY;

SELECT  CLIENTID,
    	COUNT(DISTINCT EC_SESSION_ID) AS NO_PIB_LOGINS
FROM MINERVADMMART.DM_ECOMMERCE_MIA
WHERE EC_ACTION_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30
GROUP BY CLIENTID;


// LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// PIB_LOGINS_30D:
// LOAD	
// 		CLIENTID AS PIB_LOGIN_CID,
//         NO_PIB_LOGINS,
//      	'PIB Active' AS PIB_LOGIN_PERIOD,
//         CLIENTID & ' 90 Days' AS PIB_LOGIN_KEY;

// SELECT 	CLIENTID,
//     	COUNT(DISTINCT EC_SESSION_ID) AS NO_PIB_LOGINS
// FROM MINERVADMMART.DM_ECOMMERCE_MIA
// WHERE EC_ACTION_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 90
// GROUP BY CLIENTID;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// PIB_LOGINS_12_MONTHS:
// LOAD	
// 		CLIENTID AS PIB_LOGIN_CID,
//         NO_PIB_LOGINS,
//      	'PIB Active' AS PIB_LOGIN_PERIOD,
//         CLIENTID & ' 12 Months' AS PIB_LOGIN_KEY;

// SELECT 	DISTINCT CLIENTID,
//     	COUNT(DISTINCT EC_SESSION_ID) AS NO_PIB_LOGINS
// FROM 	MINERVADMMART.DM_ECOMMERCE_MIA
// WHERE 	EC_ACTION_DATE >= ADD_MONTHS((NEXT_DAY(SYSDATE,'SATURDAY')-7) , -12)
// GROUP BY CLIENTID;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//Customers logging into MIB in the last 12 months

NOCONCATENATE
MIB_LOGINS:
LOAD	
		CLIENTID AS MIB_LOGIN_CID,
        NO_MIB_LOGINS,
     	'MIB Active' AS MIB_LOGIN_PERIOD,
        CLIENTID & ' 30 Days' AS MIB_LOGIN_KEY;

SELECT CLIENTID,
    COUNT(DISTINCT SESSION_CORRELATION) AS NO_MIB_LOGINS
FROM MINERVADMMART.DM_MOBILE_BANK_SERVICING 
WHERE LOAD_BUSINESS_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30
AND CHANNEL_ID NOT IN ('WEB', 'OHI')
GROUP BY CLIENTID;


// LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// CONCATENATE(MIB_LOGINS)
// MIB_LOGINS_90D:
// LOAD	
// 		CLIENTID AS MIB_LOGIN_CID,
//         NO_MIB_LOGINS,
//      	'MIB Active' AS MIB_LOGIN_PERIOD,
//         CLIENTID & ' 90 Days' AS MIB_LOGIN_KEY;

// SELECT CLIENTID,
//     COUNT(DISTINCT SESSION_CORRELATION) AS NO_MIB_LOGINS
// FROM MINERVADMMART.DM_MOBILE_BANK_SERVICING 
// WHERE LOAD_BUSINESS_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 90
// AND CHANNEL_ID NOT IN ('WEB', 'OHI')
// GROUP BY CLIENTID;


// LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// CONCATENATE(MIB_LOGINS)
// MIB_LOGINS_12M:
// LOAD	
// 		CLIENTID AS MIB_LOGIN_CID,
//         NO_MIB_LOGINS,
//      	'MIB Active' AS MIB_LOGIN_PERIOD,
//         CLIENTID & ' 12 Months' AS MIB_LOGIN_KEY;

// SELECT	CLIENTID,
//       	COUNT(DISTINCT SESSION_CORRELATION) AS NO_MIB_LOGINS
// FROM 	MINERVADMMART.DM_MOBILE_BANK_SERVICING 
// WHERE 	LOAD_BUSINESS_DATE >= ADD_MONTHS((NEXT_DAY(SYSDATE,'SATURDAY')-7) , -12)
// AND CHANNEL_ID NOT IN ('WEB', 'OHI')
// GROUP BY CLIENTID; 


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// Customers who had their first MIB login with the last 12 months

FIRST_MIB_LOGINS:
LOAD	CLIENTID AS FIRST_MIB_LOGIN_CID,
		'First MIB Login' AS FIRST_MIB_LOGIN_PERIOD,
        CLIENTID & ' 30 Days' AS FIRST_MIB_LOGIN_KEY;

SELECT CLIENTID
FROM MINERVADMMART.DM_MIB_LOGON
WHERE MIB_FIRST_LOGON_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// Customers who had their first MIB login with the last 12 months

 FIRST_MIB_LOGINS_90D:
LOAD	CLIENTID AS FIRST_MIB_LOGIN_CID,
		'First MIB Login' AS FIRST_MIB_LOGIN_PERIOD,
       CLIENTID & ' 90 Days' AS FIRST_MIB_LOGIN_KEY;

 SELECT DISTINCT CLIENTID
 FROM MINERVADMMART.DM_MIB_LOGON
WHERE MIB_FIRST_LOGON_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 90;


 LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

Customers who had their first MIB login with the last 12 months

FIRST_MIB_LOGINS_12M:
LOAD	CLIENTID AS FIRST_MIB_LOGIN_CID,
	'First MIB Login' AS FIRST_MIB_LOGIN_PERIOD,
         CLIENTID & ' 12 Months' AS FIRST_MIB_LOGIN_KEY;

 SELECT DISTINCT CLIENTID
 FROM MINERVADMMART.DM_MIB_LOGON
WHERE MIB_FIRST_LOGON_DATE >= ADD_MONTHS((NEXT_DAY(SYSDATE,'SATURDAY')-7) , -12); 


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

// MIB Actions in the last 12 months

MIB_ACTIONS:  
LOAD	CLIENTID AS MIB_ACTION_CID,
        MIB_ACTION,
        NO_MIB_ACTIONS,
        '30 Days' AS MIB_ACTION_PERIOD,
        CLIENTID & ' 30 Days' AS MIB_ACTION_KEY;
        
SELECT CLIENTID,
    EVENT_ID AS MIB_ACTION,
    COUNT(EVENT_ID) AS NO_MIB_ACTIONS
FROM MINERVADMMART.DM_MOBILE_BANK_SERVICING
WHERE LOAD_BUSINESS_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30
AND EVENT_ID = 'HSBC_MOB__3DS_TRANSACTION_SUCCESS'
GROUP BY CLIENTID, EVENT_ID ;


//Loading the IVR data. This is not being coded using the different time periods as above becuase we cant get 30, 90 etc days - the data is only for the last 3 complete months.
//It will be better if we joined this to products using CLIENTID. The visualisation can then show how many of the customers in the base set had an IVR action in each of the last 3 months

IVR_DATA:
LOAD DATE(Date) AS ACTIVITY_DATE,
    "Customer Account Number" AS CDU_NUMBER,
    Description AS IVR_ACTION
FROM [lib://Qlik Folder (hbeu_43945720)/IVR_Data/All_IVR_Contacts.csv]
(txt, codepage is 28599, embedded labels, delimiter is ',', msq)
WHERE WILDMATCH(Description, '*IVR Pay*');



LIB CONNECT TO 'WPB_MS_Oracle (DQM)';


LEFT JOIN
LOAD CLIENTID AS IVR_CID, 
	CDU_NUMBER;

SELECT "CLIENTID",
		"CDU_NUMBER"
FROM "MINERVADMMART"."DM_CDU_NUMBER_LOOKUP";


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

LEFT KEEP(ALL_PRODUCTS)

CONTACT_DETAILS_INT:
SQL
  	SELECT 	DISTINCT A.CLIENTID AS PRODUCT_CID,
      CASE WHEN A.EMAIL IS NOT NULL AND A.EMAIL LIKE '%_@__%.__%' AND LOWER(A.EMAIL) != 'no.email@address.com' THEN 'Y'
      ELSE 'N' END AS VALID_EMAIL,
      CASE WHEN A.MOBILETEL IS NOT NULL OR A.HOMETEL LIKE '07%' THEN 'Y'
      ELSE 'N' END AS VALID_MOBILE
  	FROM 	MINERVADMMART.DM_CUSTOMER_ADDRESS A
  	INNER JOIN	(SELECT B.CLIENTID, MAX(B.CONTACT_START_DATE) AS LAST_CONTACT
				FROM MINERVADMMART.DM_CUSTOMER_ADDRESS B
    			GROUP BY B.CLIENTID) C
  	ON A.CLIENTID = C.CLIENTID
    WHERE A.CONTACT_START_DATE = C.LAST_CONTACT;


CONTACT_DETAILS:
LOAD
	DISTINCT PRODUCT_CID AS CONTACT_DETAILS_CID,
    VALID_EMAIL,
    VALID_MOBILE,
    '30 Days' AS CONTACT_DETAILS_PERIOD,
        PRODUCT_CID & ' 30 Days' AS CONTACT_DETAILS_KEY
RESIDENT CONTACT_DETAILS_INT;


CONTACT_DETAILS_90D:
LOAD
	DISTINCT PRODUCT_CID AS CONTACT_DETAILS_CID,
    VALID_EMAIL,
    VALID_MOBILE,
    '90 Days' AS CONTACT_DETAILS_PERIOD,
        PRODUCT_CID & ' 90 Days' AS CONTACT_DETAILS_KEY
RESIDENT CONTACT_DETAILS_INT;


CONTACT_DETAILS_12M:
LOAD
	DISTINCT PRODUCT_CID AS CONTACT_DETAILS_CID,
    VALID_EMAIL,
    VALID_MOBILE,
    '12 Months' AS CONTACT_DETAILS_PERIOD,
        PRODUCT_CID & ' 12 Months' AS CONTACT_DETAILS_KEY
RESIDENT CONTACT_DETAILS_INT;


DROP TABLE CONTACT_DETAILS_INT;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

LEFT KEEP(ALL_PRODUCTS)

//A table of customer details 

CUSTOMER_DETAILS_INT:
SQL
SELECT 	CLIENTID AS PRODUCT_CID, 
    CASE
      WHEN AGE >= 18 AND AGE <= 30 THEN '18-30'
      WHEN AGE >= 31 AND AGE <= 40 THEN '31-40'
      WHEN AGE >= 41 AND AGE <= 50 THEN '41-50'
      WHEN AGE >= 51 AND AGE <= 60 THEN '51-60'
      WHEN AGE >= 61 AND AGE <= 70 THEN '61-70'
      WHEN AGE >= 71 AND AGE <= 80 THEN '71-80'
      WHEN AGE >= 81 AND AGE <= 90 THEN '81-90'
      WHEN AGE >= 91 AND AGE <= 100 THEN '91-100'
      WHEN AGE >= 101 AND AGE <= 110 THEN '101-110'
    ELSE 'Unknown' END AS AGE,
    GENDER,
    CASE
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 1 THEN '< 1 Year'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 2 THEN '1 Year'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 3 THEN '2 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 4 THEN '3 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 5 THEN '4 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER) / 365, 0) < 6 THEN '5 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 7 THEN '6 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 8 THEN '7 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 9 THEN '8 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 10 THEN '9 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 11 THEN '10 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 12 THEN '11 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 13 THEN '12 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 14 THEN '13 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 15 THEN '14 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 16 THEN '15 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 17 THEN '16 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 18 THEN '17 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 19 THEN '18 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 20 THEN '19 Years'
      WHEN ROUND(((NEXT_DAY(SYSDATE,'SATURDAY')-7)  - DATE_FIRST_CUSTOMER ) / 365, 0) < 21 THEN '20 Years'
    ELSE '20+ Years'END AS TENURE
FROM MINERVADMMART.DM_CUSTOMER;


CUSTOMER_DETAILS:
LOAD
	DISTINCT PRODUCT_CID AS CUSTOMER_DETAILS_CID,
    AGE,
    GENDER,
    TENURE,
    '30 Days' AS CUSTOMER_DETAILS_PERIOD,
    PRODUCT_CID & ' 30 Days' AS CUSTOMER_DETAILS_KEY
RESIDENT CUSTOMER_DETAILS_INT;


CUSTOMER_DETAILS_90D:
LOAD
	DISTINCT PRODUCT_CID AS CUSTOMER_DETAILS_CID,
    AGE,
    GENDER,
    TENURE,
    '90 Days' AS CUSTOMER_DETAILS_PERIOD,
    PRODUCT_CID & ' 90 Days' AS CUSTOMER_DETAILS_KEY
RESIDENT CUSTOMER_DETAILS_INT;


CUSTOMER_DETAILS_12M:
LOAD
	DISTINCT PRODUCT_CID AS CUSTOMER_DETAILS_CID,
    AGE,
    GENDER,
    TENURE,
    '12 Months' AS CUSTOMER_DETAILS_PERIOD,
    PRODUCT_CID & ' 12 Months' AS CUSTOMER_DETAILS_KEY
RESIDENT CUSTOMER_DETAILS_INT;


DROP TABLE CUSTOMER_DETAILS_INT;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';
 
LEFT KEEP(ALL_PRODUCTS)

MARKETING_INT:
SQL
SELECT 	DISTINCT A.CLIENTID AS PRODUCT_CID,
    	CASE 
    		WHEN DERIVED_EMAILABLE = 'Y' THEN 'Y'
    	ELSE 'N' END AS Emailable,
    	CASE
    		WHEN DERIVED_MAILABLE = 'Y' THEN 'Y'
    	ELSE 'N' END AS Mailable,
   	 	CASE
    		WHEN DERIVED_PHONEABLE = 'Y' THEN 'Y'
    	ELSE 'N' END AS Phoneable,
    	CASE
    		WHEN DERIVED_SMSABLE = 'Y' THEN 'Y'
    	ELSE 'N' END AS SMSable
FROM  	MINERVADMMART.DM_CUSTOMER A;
 

MARKETING:
LOAD
	DISTINCT PRODUCT_CID AS MARKETING_CID,
    EMAILABLE,
    MAILABLE,
    PHONEABLE,
    SMSABLE,
    '30 Days' AS MARKETING_PERIOD,
    PRODUCT_CID & ' 30 Days' AS MARKETING_KEY
RESIDENT MARKETING_INT;


MARKETING_90D:
LOAD
	DISTINCT PRODUCT_CID AS MARKETING_CID,
    EMAILABLE,
    MAILABLE,
    PHONEABLE,
    SMSABLE,
    '90 Days' AS MARKETING_PERIOD,
    PRODUCT_CID & ' 90 Days' AS MARKETING_KEY
RESIDENT MARKETING_INT;


MARKETING_12M:
LOAD
	DISTINCT PRODUCT_CID AS MARKETING_CID,
    EMAILABLE,
    MAILABLE,
    PHONEABLE,
    SMSABLE,
    '12 Months' AS MARKETING_PERIOD,
    PRODUCT_CID & ' 12 Months' AS MARKETING_KEY
RESIDENT MARKETING_INT;

 
DROP TABLE MARKETING_INT;
 

LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

//Customers who logged into MIB with the last 12 months including details of the operating system and version

MIB_DEVICES:
LOAD
    CLIENTID AS MIB_DEVICE_CID,
    OS_AND_VERSION,
    '30 Days' AS MIB_DEVICE_PERIOD,
    CLIENTID & ' 30 Days' AS MIB_DEVICE_KEY;;

SELECT DISTINCT CLIENTID,
	CASE
	WHEN USER_AGENT LIKE '%Android%' THEN SUBSTR(  SUBSTR(USER_AGENT, INSTR(USER_AGENT, 'Android')), 1, INSTR(SUBSTR(USER_AGENT, INSTR(USER_AGENT, 'Android')), ';')-1)
 	WHEN USER_AGENT LIKE '%iOS%' THEN SUBSTR(  SUBSTR(USER_AGENT, INSTR(USER_AGENT, 'iOS')), 1, INSTR(SUBSTR(USER_AGENT, INSTR(USER_AGENT, 'iOS')), ';')-1)
	ELSE 'Other' END AS OS_AND_VERSION
FROM MINERVADMMART.DM_MOBILE_BANK_SERVICING
WHERE LOAD_BUSINESS_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30
AND USER_AGENT NOT LIKE '%VAM-OnBoarding%'
AND CHANNEL_ID NOT IN ('WEB', 'OHI');

// Digital Ladder import


SET vFolderPath = '[lib://Qlik Folder (xxx_4xxxxxx)/Digital_Ladder_Data/';

For each vFile in FileList('$(vFolderPath)*.csv')
	DIGITAL_LADDER_INT:
	LOAD
		CLIENTID,
        CATEGORY,
        DATE(DATE#(AS_AT, 'DD-MMM-YYYY')) AS AS_AT
	FROM 
		[$(vFile)]
	(txt, codepage is 28592, embedded labels, delimiter is ',', msq);

Next vFile;


DIGITAL_LADDER:
LOAD
	CLIENTID AS DIGITAL_LADDER_CID,
    CATEGORY, 
    AS_AT
RESIDENT DIGITAL_LADDER_INT
WHERE AS_AT = DATE#(MONTHEND(ADDMONTHS(WEEKSTART(TODAY() - 2), -1)), 'dd-Mmm-yyyy')
OR AS_AT = DATE#(MONTHEND(ADDMONTHS(WEEKSTART(TODAY() - 2), -4)), 'dd-Mmm-yyyy')
OR AS_AT = DATE#(MONTHEND(ADDMONTHS(WEEKSTART(TODAY() - 2), -13)), 'dd-Mmm-yyyy');


DROP TABLE DIGITAL_LADDER_INT;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';


INTERIM_CC_TABLE:
SELECT DISTINCT "CLIENTID",
SUBSTR("CC_ACCOUNT_NUMBER", 7, 10) AS CA_DISPLAY_ACCOUNT_NUMBER
FROM "MINERVADMMART"."DM_CREDIT_CARD"
WHERE (CC_STATUS NOT IN  ('8', '9', 'Z')
AND CC_DATE_CLOSED IS NULL);


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

LEFT KEEP
CC_OFFER_INT:
LOAD	DISTINCT CLIENTID , 
		OFFER;

SELECT DISTINCT CLIENTID,
	CA_DISPLAY_ACCOUNT_NUMBER,
	CASE
		WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = '1' THEN 'SH_PLUS'
        WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = '2' THEN 'TR_PLUS'
        WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = '3' THEN 'RE_PLUS'
        WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = 'M' AND SUBSTR(CA_CAMPAIGN_TYPE,4,1) = '1' THEN 'SH_PLUS'
        WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = 'M' AND SUBSTR(CA_CAMPAIGN_TYPE,4,1) = '2' THEN 'TR_PLUS'
        WHEN SUBSTR(CA_CAMPAIGN_TYPE,1,1) = 'M' AND SUBSTR(CA_CAMPAIGN_TYPE,4,1) = '3' THEN 'RE_PLUS'
        ELSE 'Other' END AS OFFER
FROM MINERVADMMART.DM_APPLICATION ;


CC_OFFER:
LOAD DISTINCT CLIENTID AS CC_OFFER_CID,
		OFFER,
        '30 Days' AS CC_OFFER_PERIOD,
    	CLIENTID & ' 30 Days' AS CC_OFFER_KEY
RESIDENT CC_OFFER_INT;


CC_OFFER_90D:
LOAD DISTINCT CLIENTID AS CC_OFFER_CID,
		OFFER,
        '90 Days' AS CC_OFFER_PERIOD,
    	CLIENTID & ' 90 Days' AS CC_OFFER_KEY
RESIDENT CC_OFFER_INT;


CC_OFFER_12M:
LOAD DISTINCT CLIENTID AS CC_OFFER_CID,
		OFFER,
        '12 Months' AS CC_OFFER_PERIOD,
    	CLIENTID & ' 12 Months' AS CC_OFFER_KEY
RESIDENT CC_OFFER_INT;


//Drop the intermediate tables

DROP TABLE INTERIM_CC_TABLE;
DROP TABLE CC_OFFER_INT;


// Customers product activity - 30 days, 90 days and 12 month 

LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

CC_PRODUCT_ACTIVE_INT:
LOAD 
	CC_ACCOUNT_NUMBER,
    'CC Product Active' AS CC_PRODUCT_ACTIVE_PERIOD,
    '30 Days' AS PERIOD;
 
SELECT	DISTINCT A.CC_ACCOUNT_NUMBER 
FROM 	MINERVADMMART.DM_CREDIT_CARD_TRANSACTION A
WHERE 	A.CC_LOAD_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 30
AND 	A.CC_BILLED_AMOUNT != 0;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

CC_PRODUCT_ACTIVE_90D:
LOAD 
	CC_ACCOUNT_NUMBER,
    'CC Product Active' AS CC_PRODUCT_ACTIVE_PERIOD,
    '90 Days' AS PERIOD;
 
SELECT	DISTINCT A.CC_ACCOUNT_NUMBER
FROM 	MINERVADMMART.DM_CREDIT_CARD_TRANSACTION A
WHERE 	A.CC_LOAD_DATE >= (NEXT_DAY(SYSDATE,'SATURDAY')-7)  - 90
AND 	A.CC_BILLED_AMOUNT != 0;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

CC_PRODUCT_ACTIVE_12M:
LOAD 
	CC_ACCOUNT_NUMBER,
    'CC Product Active' AS CC_PRODUCT_ACTIVE_PERIOD,
    '12 Months' AS PERIOD;
 
SELECT	DISTINCT A.CC_ACCOUNT_NUMBER
FROM 	MINERVADMMART.DM_CREDIT_CARD_TRANSACTION A
WHERE 	A.CC_LOAD_DATE >= ADD_MONTHS((NEXT_DAY(SYSDATE,'SATURDAY')-7) , -12)
AND 	A.CC_BILLED_AMOUNT != 0;


LIB CONNECT TO 'WPB_MS_Oracle (DQM)';

INNER JOIN(CC_PRODUCT_ACTIVE_INT)

LOAD 
	CLIENTID AS CC_PRODUCT_ACTIVE_CID,
    CC_ACCOUNT_NUMBER;

SELECT DISTINCT CLIENTID, CC_ACCOUNT_NUMBER
FROM MINERVADMMART.DM_CREDIT_CARD
WHERE (CC_STATUS NOT IN  ('8', '9', 'Z')
AND CC_DATE_CLOSED IS NULL);


//create a new table from CC_PRODUCT_ACTIVE which includes everything plus a key

CC_PRODUCT_ACTIVE:
LOAD 
    CC_PRODUCT_ACTIVE_CID,
    'CC Product Active' AS CC_PRODUCT_ACTIVE_PERIOD,
    PERIOD AS CC_PA_PERIOD,
    CC_PRODUCT_ACTIVE_CID & ' ' & PERIOD AS CC_PRODUCT_ACTIVE_KEY
RESIDENT CC_PRODUCT_ACTIVE_INT;

DROP TABLE CC_PRODUCT_ACTIVE_INT;

